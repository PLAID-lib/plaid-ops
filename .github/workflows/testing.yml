name: Tests and Examples

permissions:
  contents: read

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
  schedule:
    - cron: '0 0 * * *'  # Every day at 00:00 UTC

jobs:
  test:
    name: Run Tests and Examples
    runs-on: ${{ matrix.os }}
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install packages for Linux only
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y libgl1 mesa-utils

      - name: Set up Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          use-mamba: false
          python-version: 3.11
          auto-activate-base: false
          miniforge-variant: Miniforge3

      - name: Create environment
        run: |
          conda create -n plaid-ops python=${{ matrix.python-version }} hdf5 muscat-core=2.5 -c conda-forge
          conda run -n plaid-ops python -m pip install -e .[dev]

      - name: Run tests on Linux
        if: runner.os == 'Linux'
        run: |
          conda run -n plaid-ops python -m pytest tests --cov=src --cov-report=xml --cov-report=term

      - name: Run tests on macOS
        if: runner.os == 'macOS'
        run: |
          conda run -n plaid-ops python -m pytest tests

      - name: Run tests on Windows
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          conda run -n plaid-ops python -m pytest tests

      - name: Run examples on Unix
        if: runner.os != 'Windows'
        run: |
          cd examples
          conda run -n plaid-ops bash run_examples.sh

      - name: Run examples on Windows
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          cd examples
          conda run -n plaid-ops run_examples.bat

      - name: Upload coverage to Codecov (Linux and python 3.11 only)
        if: runner.os == 'Linux' && matrix.python-version == '3.11'
        uses: codecov/codecov-action@v5
        with:
          files: coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: PLAID-lib/plaid-ops
          name: python-${{ matrix.python-version }}
          verbose: true
